datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName String?
  lastName  String?
  email     String    @unique
  password  String?
  image     String?
  sessions  Session[] @relation("UserSessions")
  accounts  Account[] @relation("UserAccounts")
  plannedMeals PlannedMeal[] @relation("UserPlannedMeals")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, name: "UserAccounts")

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade, name: "UserSessions")
}

model PlannedMeal {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  mealId      String
  mealName    String
  mealImage   String
  plannedDate DateTime
  ingredients Ingredient[]
  recipe      String
  description String
  macronutrients Macronutrients

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, name: "UserPlannedMeals")
}



model Meal {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  description    String
  recipe         String
  ingredients    Ingredient[]
  macronutrients Macronutrients
  prepTime       String
  image          String
  tags           String[]
  type           String 
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

type Ingredient {
  name     String
  quantity Float
  unit     String
}

type Macronutrients {
  protein  Float
  carbs    Float
  fats     Float
  calories Float
}



model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
